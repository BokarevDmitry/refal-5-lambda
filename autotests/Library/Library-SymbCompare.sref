//FROM Library
$EXTERN SymbCompare;

LT { '<' = ; }
EQ { '=' = ; }
GT { '>' = ; }

$ENTRY Go {
  = <CompareTypes <MakeHandle>>;
}

MakeHandle {
%%
  refalrts::Iter content_b = 0;
  refalrts::Iter content_e = 0;
  refalrts::Iter pfunc_name =
    refalrts::call_left(content_b, content_e, arg_begin, arg_end);

  arg_begin->tag = refalrts::cDataFile;
  arg_begin->file_info = 0;

  refalrts::splice_to_freelist(vm, pfunc_name, arg_end);
  return refalrts::cSuccess;
%%
}

CompareTypes {
  s.Handle =
    <LT <SymbCompare 42 666>>
    <EQ <SymbCompare 42 42>>
    <GT <SymbCompare 666 42>>

    <LT <SymbCompare 'a' 'b'>>
    <EQ <SymbCompare '5' '5'>>
    <GT <SymbCompare 'Z' 'A'>>

    // сравнение функций: сначала по имени, потом по указателю
    <LT <SymbCompare EQ LT>>
    <EQ <SymbCompare EQ EQ>>
    <GT <SymbCompare GT EQ>>

    <LT <SymbCompare #AA #ZZ>>
    <EQ <SymbCompare #EE #EE>>
    <GT <SymbCompare #ZZ #ZA>>

    // ради простоты теста сравниваем только равенство
    <EQ <SymbCompare s.Handle s.Handle>>

    <GT <SymbCompare 1 'a'>>
    <GT <SymbCompare 'a' Go>>
    <GT <SymbCompare Go #Name>>
    <GT <SymbCompare #Name s.Handle>>

    <LT <SymbCompare s.Handle #Name>>
    <LT <SymbCompare #Name Go>>
    <LT <SymbCompare Go 'a'>>
    <LT <SymbCompare 'a' 1>>;
}
