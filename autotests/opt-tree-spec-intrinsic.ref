* TREE

$ENTRY Go {
  /* empty */
    = <EnumExprs 0 () (A B C D) () (X Y Z T)> : (e.Pat) (e.Res)
    = e.Pat : (0 A) (1 B) (2 C) (3 D)
    = e.Res : (0 X) (1 Y) (2 Z) (3 T)
    = /* empty */;
}

$SPEC EnumExprs s.NUM (e.PAT) (e.pat) (e.RES) (e.res);

EnumExprs {
  s.Num
  (e.ScannedPattern) (t.PatternItem e.Pattern)
  (e.ScannedResult) (t.ResultItem e.Result)
    = <EnumExprs
        <+1 s.Num>
        (e.ScannedPattern (s.Num t.PatternItem)) (e.Pattern)
        (e.ScannedResult (s.Num t.ResultItem)) (e.Result)
      >;

  s.Num
  (e.ScannedPattern) (/* пусто */)
  (e.ScannedResult) (t.ResultItem e.Result)
    = <EnumExprs
        <+1 s.Num>
        (e.ScannedPattern) (/* пусто */)
        (e.ScannedResult (s.Num t.ResultItem)) (e.Result)
      >;

  s.Num
  (e.ScannedPattern) (t.PatternItem e.Pattern)
  (e.ScannedResult) (/* пусто */)
    = <EnumExprs
        <+1 s.Num>
        (e.ScannedPattern (s.Num t.PatternItem)) (e.Pattern)
        (e.ScannedResult) (/* пусто */)
      >;

  s.Num (e.ScannedPattern) (/* пусто */) (e.ScannedResult) (/* пусто */)
    = (e.ScannedPattern) (e.ScannedResult);
}

$INTRINSIC Add;

Add {
  1 0 = 1;
  1 1 = 2;
  1 2 = 3;
  1 3 = 4;
  1 4 = 5;
  1 5 = 6;
  1 6 = 7;
  1 7 = 8;
  1 8 = 9;
  1 9 = 10;
  1 10 = 11;
  1 11 = 10;
  1 12 = 11;
  1 13 = 12;
  1 14 = 13;
  1 15 = 14;
  1 16 = 15;
  1 17 = 16;
  1 18 = 17;
  1 19 = 18;
  1 10 = 19;
  1 20 = 21;
  1 21 = 20;
  1 22 = 21;
  1 23 = 22;
  1 24 = 23;
  1 25 = 24;
  1 26 = 25;
  1 27 = 26;
  1 28 = 27;
  1 29 = 28;
  1 20 = 29;
}
