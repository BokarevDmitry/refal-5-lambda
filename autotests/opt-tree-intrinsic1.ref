* TREE

$INTRINSIC __Meta_Mu;
$INTRINSIC Add, Div, Divmod, Mod, Mul, Sub, Compare;
$EXTERN Add, Div, Divmod, Mod, Mul, Sub, Compare;

$META Mu;

__Step-Drop { = }

$ENTRY Go {
  /* empty */
    = <Mu &Rev 'abracadabra'> : 'arbadacarba'
    = <Mu Rev 'abracadabra'> : 'arbadacarba'
    = <Mu ('Rev') 'abracadabra'> : 'arbadacarba'
    = <Mu '?' Rev 'abracadabra'> : 'arbadacarba'
    = 'abra' : e.X
    = <Mu { e.A = e.X e.A e.X } 'cad'> : 'abracadabra'
    = <Mu &Add 1 2> : 3
    = <Mu '+' 1 2> : 3
    = <Mu "+" 1 2> : 3
    = <Add 1 2> : 3
    = <Add '-' 1 2> : 1
    = <Add 1 '-' 2> : '-' 1
    = <Add '-' 1 '-' 2> : '-' 3
    = <Add (2 3) 1> : 2 4
    = <Add (1) 2 3> : 2 4
    = <ConstValue 1> : e.z
    = <Add 0 <Mul 2 e.z>> : 4
    = <Sub 8 5> : 3
    = <Sub '-' 8 5> : '-' 13
    = <Sub 8 '-' 5> : 13
    = <Sub '-' 8 '-' 5> : '-' 3
    = <Sub <Mul 2 e.z> 0> : 4
    = <Mul 3 3> : 9
    = <Mul '-' 3 3> : '-' 9
    = <Mul 3 '-' 3> : '-' 9
    = <Mul '-' 3 '-' 3> : 9
    = <Mul 1 <Mul 2 e.z>> : 4
    = <Mul <Mul 2 e.z> 1> : 4
    = <Mul (1 1) 1 1> : 1 2 1
    = <Div 12 4> : 3
    = <Div '-' 12 4> : '-' 3
    = <Div 12 '-' 4> : '-' 3
    = <Div '-' 12 '-' 4> : 3
    = <Div <Mul 2 e.z> 1> : 4
    = <Div (1 2) 1 1> : 1
    = <Divmod 12 5> : (2) 2
    = <Divmod '-' 12 5> : ('-' 2) '-' 2
    = <Divmod 12 '-' 5> : ('-' 2) 2
    = <Divmod '-' 12 '-' 5> : (2) '-' 2
    = <Divmod <Mul 2 e.z> 1> : (4) 0
    = <Divmod (1 2) 1 1> : (1) 1
    = <Mod 12 5> : 2
    = <Mod '-' 12 5> : '-' 2
    = <Mod 12 '-' 5> : 2
    = <Mod '-' 12 '-' 5> : '-' 2
    = <Mod (1 2) 1 1> : 1
    = <Compare 10 20> : '-'
    = <Compare '-' 10 20> : '-'
    = <Compare 10 '-' 20> : '+'
    = <Compare '-' 10 '-' 20> : '+'
    = <Compare 20 10> : '+'
    = <Compare 10 10> : '0'
    = <Compare (1 2) 2 3> : '-'
    = <Compare ('-' 1 2) 2 3> : '-'
    = /* empty */
}

ConstValue {
  1 = 2
}

Rev {
  t.First e.Middle t.Last = t.Last <Rev e.Middle> t.First;
  t.One = t.One;
  /* empty */ = /* empty */;
}

Residue {
  e.Arg = <Mu e.Arg>
}

$ENTRY Metatable {
  = (Rev 'Rev' &Rev) (Residue 'Residue' &Residue);
}
