$INCLUDE "LibraryEx";

*$FROM OptTree-AutoMarkup-Common
$EXTERN 
  OptTree-AutoMarkup-GetSetDifference, 
  OptTree-AutoMarkup-Contains, 
  OptTree-AutoMarkup-GetElemByKey, 
  OptTree-AutoMarkup-GetParents;

/**
	<OptTree-AutoMarkup-ExtractBasisVertexes e.ExtractedGraph> = (e.BasisVertex)*

	e.BasisVertex = e.FuncName
*/

$ENTRY OptTree-AutoMarkup-ExtractBasisVertexes {
  e.Graph
    = <OptTree-AutoMarkup-GetWalkOrder e.Graph> 
      : (e.WalkOrder)
    = <OptTree-AutoMarkup-GetExtractedComponents 
        (e.WalkOrder) 
        (e.Graph)
      > 
      : (e.Components)
    = <OptTree-AutoMarkup-GetNotBaseVertexes 
        (e.Components) 
        (e.Graph)
      > 
}

OptTree-AutoMarkup-GetWalkOrder-ProcessGraphNode {
  (Func (e.Name) Children (e.Children)) (e.ProcessedBag) (e.Order) (e.Graph)
    = e.ProcessedBag (e.Name) 
      : e.ProcessedBagWithMe
    = <MapAccum
        {
          ((e.ProcessedBagAccumed) (e.OrderAccumed)) 
          (e.ChildName)
            = <OptTree-AutoMarkup-Contains 
                (e.ChildName) 
                (e.ProcessedBagAccumed)
              > 
              : {
                  True
                    = ((e.ProcessedBagAccumed) (e.OrderAccumed));

                  False
                    = <OptTree-AutoMarkup-GetElemByKey 
                        (e.ChildName) 
                        (e.Graph)
                      > : e.Child
                    = <OptTree-AutoMarkup-GetWalkOrder-ProcessGraphNode
                        (e.Child)
                        (e.ProcessedBagAccumed) 
                        (e.OrderAccumed) 
                        (e.Graph)
                      >;
                }              
        }
        ((e.ProcessedBagWithMe) (e.Order)) e.Children
      > 
      : ((e.ProcessedBagRes) (e.OrderRes))
    = ((e.ProcessedBagRes) ((e.Name) e.OrderRes)); 

  () (e.ProcessedBag) (e.Order) (e.Graph)
    = ((e.ProcessedBag) (e.Order));
}

OptTree-AutoMarkup-GetWalkOrder {
  e.Graph 
    = <MapAccum
        {
          ((e.ProcessedBag) (e.Order)) (Func (e.Name) Children (e.Children))
            = <OptTree-AutoMarkup-Contains (e.Name) (e.ProcessedBag)>
              : {
                True
                  = ((e.ProcessedBag) (e.Order));

                False
                  = <OptTree-AutoMarkup-GetWalkOrder-ProcessGraphNode 
                      (Func (e.Name) Children (e.Children)) 
                      (e.ProcessedBag)
                      (e.Order) 
                      (e.Graph)
                    >;
                };
        }
        ((/*processedBag*/)(/*order*/)) e.Graph
      > 
      : ((e.ProcessedBagRes) (e.OrderRes))
    = (e.OrderRes);
}

OptTree-AutoMarkup-GetExtractedComponents-ProcessGraphNode {
  (Func (e.Name) Children (e.Children)) 
  (e.ProcessedBag) (e.CurExtractedComponent) (e.Graph)
    = e.ProcessedBag (e.Name) 
      : e.ProcessedBagWithMe
    = e.CurExtractedComponent (e.Name) 
      : e.ExtractedComponentWithMe
    = <OptTree-AutoMarkup-GetParents (e.Name) (e.Graph)> 
      : (e.Parents)
    = <MapAccum
        {
          ((e.ProcessedBagAccumed) (e.ExtractedComponentAccumed)) 
          (e.Name)
            = (
                (e.ProcessedBagAccumed) 
                (e.ExtractedComponentAccumed (e.Name _recursive))
              );

          ((e.ProcessedBagAccumed) (e.ExtractedComponentAccumed)) 
          (e.ParentName)
            = <OptTree-AutoMarkup-Contains 
                (e.ParentName) 
                (e.ProcessedBagAccumed)
              > 
              : {
                  True
                    = (
                        (e.ProcessedBagAccumed) 
                        (e.ExtractedComponentAccumed)
                      );

                  False
                    = <OptTree-AutoMarkup-GetElemByKey 
                        (e.ParentName) 
                        (e.Graph)
                      > 
                      : e.Parent
                    = <OptTree-AutoMarkup-GetExtractedComponents-ProcessGraphNode
                        (e.Parent)
                        (e.ProcessedBagAccumed) 
                        (e.ExtractedComponentAccumed) 
                        (e.Graph)
                      >;
                }              
        }
        ((e.ProcessedBagWithMe) (e.ExtractedComponentWithMe)) e.Parents
      >; 

  () (e.ProcessedBag) (e.CurExtractedComponent) (e.Graph)
    = ((e.ProcessedBag) (e.CurExtractedComponent));
}

OptTree-AutoMarkup-GetExtractedComponents {
  (e.WalkOrder) (e.Graph)
    = <MapAccum
        {
          ((e.ProcessedBag) (e.ExtractedComponents)) (e.FuncName)
            = <OptTree-AutoMarkup-Contains (e.FuncName) (e.ProcessedBag)>
              : {
                  True
                    = ((e.ProcessedBag) (e.ExtractedComponents));

                  False
                    = <OptTree-AutoMarkup-GetElemByKey 
                        (e.FuncName) 
                        (e.Graph)
                      > 
                      : e.GraphNode
                    = <OptTree-AutoMarkup-GetExtractedComponents-ProcessGraphNode
                        (e.GraphNode) 
                        (e.ProcessedBag)
                        () 
                        (e.Graph)
                      > 
                      : ((e.NextProcessedBag) (e.NextExtractedComponent))
                    = (
                        (e.NextProcessedBag) 
                        (e.ExtractedComponents (e.NextExtractedComponent))
                      );
                };
        }
        ((/*processed bag*/)(/*extracted components*/)) e.WalkOrder
      > 
      : ((e.ProcessedBagRes) (e.ExtractedComponentsRes))
    = (e.ExtractedComponentsRes);
}

OptTree-AutoMarkup-GetNotBaseVertexes {
  (e.StronglyConnectedComponents) (e.Graph)
    = <Map
        {
          (Func (e.FuncName) Children (e.Children)) 
            = <OptTree-AutoMarkup-GetParents (e.FuncName) (e.Graph)>
              : (e.Parents)
            = <Map 
                {
                  (e.CurrentComponent)
                    , <OptTree-AutoMarkup-Contains 
                        (e.FuncName) 
                        (e.CurrentComponent)
                      > : True
                    = (e.CurrentComponent);

                  e.Other
                    = ;
                }
                e.StronglyConnectedComponents
              > 
              : (e.MatchedComponent)
            = <OptTree-AutoMarkup-GetSetDifference 
                (e.Parents) 
                (e.MatchedComponent)
              > 
              : (e.Diff)
            = <Lenw e.MatchedComponent> 
              : t.ComponentLength e._
            = (t.ComponentLength) (e.Diff)
              : {
                  (1) (e.Diff)
                    = ;

                  (t.ComponentLength) ()
                    = ;

                  e.Other
                    = (e.FuncName)
                }
        }
        e.Graph
      > 
}

