/*
  File generated automatically from ../lib/refalrts-commands.h
  Edit ../lib/refalrts-commands.h first and then run:
  $ rasl-constants ../lib/refalrts-commands.h Opcodes.refi
*/

$ENTRY NumberFromOpcode {
  CmdProfileFunction = 0;
  CmdLoadConstants = 1;
  CmdIssueMemory = 2;
  CmdReserveBacktrackStack = 3;
  CmdOnFailGoTo = 4;
  CmdProfilerStopSentence = 5;
  CmdInitB0 = 6;
  CmdInitB0-Lite = 7;
  CmdChar AlgLeft = 8;
  CmdChar AlgRight = 9;
  CmdChar AlgTerm = 10;
  CmdCharSave AlgLeft = 11;
  CmdCharSave AlgRight = 12;
  CmdNumber AlgLeft = 13;
  CmdNumber AlgRight = 14;
  CmdNumber AlgTerm = 15;
  CmdNumberSave AlgLeft = 16;
  CmdNumberSave AlgRight = 17;
  CmdHugeNum AlgLeft = 18;
  CmdHugeNum AlgRight = 19;
  CmdHugeNum AlgTerm = 20;
  CmdHugeNumSave AlgLeft = 21;
  CmdHugeNumSave AlgRight = 22;
  CmdName AlgLeft = 23;
  CmdName AlgRight = 24;
  CmdName AlgTerm = 25;
  CmdNameSave AlgLeft = 26;
  CmdNameSave AlgRight = 27;
  CmdIdent AlgLeft = 28;
  CmdIdent AlgRight = 29;
  CmdIdent AlgTerm = 30;
  CmdIdentSave AlgLeft = 31;
  CmdIdentSave AlgRight = 32;
  CmdBrackets AlgLeft = 33;
  CmdBrackets AlgRight = 34;
  CmdBrackets AlgTerm = 35;
  CmdBracketsSave AlgLeft = 36;
  CmdBracketsSave AlgRight = 37;
  CmdADT AlgLeft = 38;
  CmdADT AlgRight = 39;
  CmdADT AlgTerm = 40;
  CmdADTSave AlgLeft = 41;
  CmdADTSave AlgRight = 42;
  CmdADTSave AlgTerm = 43;
  CmdCallSave AlgLeft = 44;
  CmdEmpty = 45;
  CmdNotEmpty = 46;
  's' CmdVar AlgLeft = 47;
  's' CmdVar AlgRight = 48;
  's' CmdVar AlgTerm = 49;
  't' CmdVar AlgLeft = 50;
  't' CmdVar AlgRight = 51;
  't' CmdVarSave AlgLeft = 52;
  't' CmdVarSave AlgRight = 53;
  'e' CmdRepeated AlgLeft = 54;
  'e' CmdRepeated AlgRight = 55;
  's' CmdRepeated AlgLeft = 56;
  's' CmdRepeated AlgRight = 57;
  's' CmdRepeated AlgTerm = 58;
  't' CmdRepeated AlgLeft = 59;
  't' CmdRepeated AlgRight = 60;
  't' CmdRepeated AlgTerm = 61;
  't' CmdRepeatedSave AlgLeft = 62;
  't' CmdRepeatedSave AlgRight = 63;
  CmdEPrepare = 64;
  CmdEStart = 65;
  CmdSave = 66;
  CmdResetAllocator = 67;
  CmdSetResArgBegin = 68;
  CmdSetResRightEdge = 69;
  CmdSetRes = 70;
  CmdCopyEVar = 71;
  CmdCopySTVar = 72;
  CmdReinitSVar = 73;
  Allocate ElChar = 74;
  Allocate ElName = 75;
  Allocate ElNumber = 76;
  Allocate ElHugeNumber = 77;
  Allocate ElIdent = 78;
  Allocate ElBracket = 79;
  Allocate ElString = 80;
  Allocate ElClosureHead = 113;
  Allocate ElUnwrappedClosure = 114;
  Reinit ElChar = 81;
  Reinit ElName = 82;
  Reinit ElNumber = 83;
  Reinit ElHugeNumber = 84;
  Reinit ElIdent = 85;
  Reinit ElBracket = 86;
  Reinit ElClosureHead = 87;
  Reinit ElUnwrappedClosure = 88;
  Update ElChar = 89;
  Update ElName = 90;
  Update ElNumber = 91;
  Update ElHugeNumber = 92;
  Update ElIdent = 93;
  CmdLinkBrackets = 94;
  CmdPushStack = 95;
  CmdWrapClosure = 110;
  CmdSpliceElem = 96;
  CmdSpliceEVar = 97;
  CmdSpliceSTVar = 98;
  CmdSpliceRange = 99;
  CmdSpliceTile = 100;
  CmdSpliceToFreeList = 101;
  CmdNextStep = 102;
  CmdTrashLeftEdge = 103;
  CmdTrash = 104;
  CmdFail = 105;
  CmdFetchSwapHead = 106;
  CmdFetchSwapInfoBounds = 107;
  CmdSwapSave = 108;
  CmdPerformNative = 109;
  CmdScale = 111;
  CmdVariableDebugOffset = 112;
  CmdSpliceToFreeList-Range = 115;
  CmdPushState = 116;
  CmdPopState = 117;
  CmdMainLoopReturnSuccess = 118;
}

$ENTRY NumberFromBracket {
  ElOpenADT = 0;
  ElOpenBracket = 1;
  ElOpenCall = 2;
  ElCloseADT = 3;
  ElCloseBracket = 4;
  ElCloseCall = 5;
}

$ENTRY BlockTypeNumber {
  Start = 1;
  ConstTable = 2;
  RefalFunction = 3;
  NativeFunction = 4;
  EmptyFunction = 5;
  Swap = 6;
  Reference = 7;
  ConditionRasl = 8;
  ConditionNative = 9;
  Incorporated = 10;
  UnitName = 11;
  Metatable = 12;
}

$ENTRY Rev_NumberFromOpcode {
  0 = Ok CmdProfileFunction;
  1 = Ok CmdLoadConstants;
  2 = Ok CmdIssueMemory;
  3 = Ok CmdReserveBacktrackStack;
  4 = Ok CmdOnFailGoTo;
  5 = Ok CmdProfilerStopSentence;
  6 = Ok CmdInitB0;
  7 = Ok CmdInitB0-Lite;
  8 = Ok CmdChar AlgLeft;
  9 = Ok CmdChar AlgRight;
  10 = Ok CmdChar AlgTerm;
  11 = Ok CmdCharSave AlgLeft;
  12 = Ok CmdCharSave AlgRight;
  13 = Ok CmdNumber AlgLeft;
  14 = Ok CmdNumber AlgRight;
  15 = Ok CmdNumber AlgTerm;
  16 = Ok CmdNumberSave AlgLeft;
  17 = Ok CmdNumberSave AlgRight;
  18 = Ok CmdHugeNum AlgLeft;
  19 = Ok CmdHugeNum AlgRight;
  20 = Ok CmdHugeNum AlgTerm;
  21 = Ok CmdHugeNumSave AlgLeft;
  22 = Ok CmdHugeNumSave AlgRight;
  23 = Ok CmdName AlgLeft;
  24 = Ok CmdName AlgRight;
  25 = Ok CmdName AlgTerm;
  26 = Ok CmdNameSave AlgLeft;
  27 = Ok CmdNameSave AlgRight;
  28 = Ok CmdIdent AlgLeft;
  29 = Ok CmdIdent AlgRight;
  30 = Ok CmdIdent AlgTerm;
  31 = Ok CmdIdentSave AlgLeft;
  32 = Ok CmdIdentSave AlgRight;
  33 = Ok CmdBrackets AlgLeft;
  34 = Ok CmdBrackets AlgRight;
  35 = Ok CmdBrackets AlgTerm;
  36 = Ok CmdBracketsSave AlgLeft;
  37 = Ok CmdBracketsSave AlgRight;
  38 = Ok CmdADT AlgLeft;
  39 = Ok CmdADT AlgRight;
  40 = Ok CmdADT AlgTerm;
  41 = Ok CmdADTSave AlgLeft;
  42 = Ok CmdADTSave AlgRight;
  43 = Ok CmdADTSave AlgTerm;
  44 = Ok CmdCallSave AlgLeft;
  45 = Ok CmdEmpty;
  46 = Ok CmdNotEmpty;
  47 = Ok 's' CmdVar AlgLeft;
  48 = Ok 's' CmdVar AlgRight;
  49 = Ok 's' CmdVar AlgTerm;
  50 = Ok 't' CmdVar AlgLeft;
  51 = Ok 't' CmdVar AlgRight;
  52 = Ok 't' CmdVarSave AlgLeft;
  53 = Ok 't' CmdVarSave AlgRight;
  54 = Ok 'e' CmdRepeated AlgLeft;
  55 = Ok 'e' CmdRepeated AlgRight;
  56 = Ok 's' CmdRepeated AlgLeft;
  57 = Ok 's' CmdRepeated AlgRight;
  58 = Ok 's' CmdRepeated AlgTerm;
  59 = Ok 't' CmdRepeated AlgLeft;
  60 = Ok 't' CmdRepeated AlgRight;
  61 = Ok 't' CmdRepeated AlgTerm;
  62 = Ok 't' CmdRepeatedSave AlgLeft;
  63 = Ok 't' CmdRepeatedSave AlgRight;
  64 = Ok CmdEPrepare;
  65 = Ok CmdEStart;
  66 = Ok CmdSave;
  67 = Ok CmdResetAllocator;
  68 = Ok CmdSetResArgBegin;
  69 = Ok CmdSetResRightEdge;
  70 = Ok CmdSetRes;
  71 = Ok CmdCopyEVar;
  72 = Ok CmdCopySTVar;
  73 = Ok CmdReinitSVar;
  74 = Ok Allocate ElChar;
  75 = Ok Allocate ElName;
  76 = Ok Allocate ElNumber;
  77 = Ok Allocate ElHugeNumber;
  78 = Ok Allocate ElIdent;
  79 = Ok Allocate ElBracket;
  80 = Ok Allocate ElString;
  113 = Ok Allocate ElClosureHead;
  114 = Ok Allocate ElUnwrappedClosure;
  81 = Ok Reinit ElChar;
  82 = Ok Reinit ElName;
  83 = Ok Reinit ElNumber;
  84 = Ok Reinit ElHugeNumber;
  85 = Ok Reinit ElIdent;
  86 = Ok Reinit ElBracket;
  87 = Ok Reinit ElClosureHead;
  88 = Ok Reinit ElUnwrappedClosure;
  89 = Ok Update ElChar;
  90 = Ok Update ElName;
  91 = Ok Update ElNumber;
  92 = Ok Update ElHugeNumber;
  93 = Ok Update ElIdent;
  94 = Ok CmdLinkBrackets;
  95 = Ok CmdPushStack;
  110 = Ok CmdWrapClosure;
  96 = Ok CmdSpliceElem;
  97 = Ok CmdSpliceEVar;
  98 = Ok CmdSpliceSTVar;
  99 = Ok CmdSpliceRange;
  100 = Ok CmdSpliceTile;
  101 = Ok CmdSpliceToFreeList;
  102 = Ok CmdNextStep;
  103 = Ok CmdTrashLeftEdge;
  104 = Ok CmdTrash;
  105 = Ok CmdFail;
  106 = Ok CmdFetchSwapHead;
  107 = Ok CmdFetchSwapInfoBounds;
  108 = Ok CmdSwapSave;
  109 = Ok CmdPerformNative;
  111 = Ok CmdScale;
  112 = Ok CmdVariableDebugOffset;
  115 = Ok CmdSpliceToFreeList-Range;
  116 = Ok CmdPushState;
  117 = Ok CmdPopState;
  118 = Ok CmdMainLoopReturnSuccess;
  e._ = Fails;
}

$ENTRY Rev_NumberFromBracket {
  0 = Ok ElOpenADT;
  1 = Ok ElOpenBracket;
  2 = Ok ElOpenCall;
  3 = Ok ElCloseADT;
  4 = Ok ElCloseBracket;
  5 = Ok ElCloseCall;
  e._ = Fails;
}

$ENTRY Rev_BlockTypeNumber {
  1 = Ok Start;
  2 = Ok ConstTable;
  3 = Ok RefalFunction;
  4 = Ok NativeFunction;
  5 = Ok EmptyFunction;
  6 = Ok Swap;
  7 = Ok Reference;
  8 = Ok ConditionRasl;
  9 = Ok ConditionNative;
  10 = Ok Incorporated;
  11 = Ok UnitName;
  12 = Ok Metatable;
  e._ = Fails;
}
