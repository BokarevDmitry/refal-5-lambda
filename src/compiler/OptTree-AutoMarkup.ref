$INCLUDE "LibraryEx";

*$FROM Log
$EXTERN Log-PutLine, Log-AST;

*$FROM DisplayName
$EXTERN DisplayName;

*$FROM OptTree-AutoMarkup-Drive
$EXTERN OptTree-AutoMarkup-Drive;

*$FROM OptTree-AutoMarkup-SpecializableExtractor
$EXTERN OptTree-AutoMarkup-GetSpecializableDict;


/**
  <OptTree-AutoMarkup s.OptAutoMarkup e.AST> == e.AST
*/

$ENTRY OptTree-AutoMarkup {
  NoOpt e.AST
    = <Log-PutLine 'AutoMarkup is disabled'> :
    = e.AST;

  OptAutoMarkup e.AST
    = <OptTree-AutoMarkup-GetSpecializableDict e.AST> : e.SpecPatterns
    = <GetForbiddenToSpecializeFunctionNames (e.AST)> : e.ForbiddenSpecNames
    = <FilterSpecPatterns e.SpecPatterns (e.ForbiddenSpecNames)>
    : e.SpecPatterns^

    = <OptTree-AutoMarkup-Drive e.AST> : e.DrivedAst
    = e.DrivedAst e.SpecPatterns;
}

GetForbiddenToSpecializeFunctionNames {
  (e.AST)
    = <Map
        {
          (Spec (e.Name) e.SpecPattern)
            = (e.Name);

          (Function s.ScopeClass (e.FuncName) Sentences e.Body)
            , (e.FuncName) : (e.FuncName '@' e.FuncNameTail)
            = (e.FuncName);

          (Function s.ScopeClass (e.FuncName) Sentences e.Body)
            , (e.FuncName) : (e.FuncNameMain SUF e.FuncNameTail)
            = (e.FuncName);

          e.Other
            = ;
        }
        e.AST
      >
}

FilterSpecPatterns {
  e.SpecializableDict (e.Forbidden)
    = <Map
        {
          ((e.Name) e.Pattern), e.Forbidden : e._ (e.Name) e._ = /* пусто */;
          ((e.Name) e.Pattern) = (Spec (e.Name) e.Pattern);
        }
        e.SpecializableDict
      >
}
